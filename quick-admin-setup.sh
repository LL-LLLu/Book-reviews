#!/bin/bash

echo "ðŸš€ Quick Admin Setup"
echo "==================="
echo ""
echo "This will help you create an admin user in two ways:"
echo ""

echo "ðŸ“Œ Option 1: Register & Promote (EASIEST)"
echo "========================================="
echo "1. Go to http://localhost:3000/register"
echo "2. Create a new account with your desired email/password"
echo "3. Run this command to make that user an admin:"
echo ""
echo "   docker exec book-review-db mongosh bookreview --eval \"db.users.updateOne({email: 'YOUR_EMAIL'}, {\\$set: {role: 'admin'}})\""
echo ""
echo "Example:"
echo "   docker exec book-review-db mongosh bookreview --eval \"db.users.updateOne({email: 'admin@example.com'}, {\\$set: {role: 'admin'}})\""
echo ""

echo "ðŸ“Œ Option 2: Direct Database Update"
echo "==================================="
echo "List all users:"
echo "   docker exec book-review-db mongosh bookreview --eval \"db.users.find({}, {email: 1, username: 1, role: 1}).pretty()\""
echo ""
echo "Make a user admin by email:"
echo "   docker exec book-review-db mongosh bookreview --eval \"db.users.updateOne({email: 'user@example.com'}, {\\$set: {role: 'admin'}})\""
echo ""

echo "ðŸ“Œ Quick Test Commands:"
echo "======================"
echo "Check if MongoDB is accessible:"
echo "   docker exec book-review-db mongosh --eval \"db.version()\""
echo ""
echo "List all admin users:"
echo "   docker exec book-review-db mongosh bookreview --eval \"db.users.find({role: 'admin'}).pretty()\""
echo ""